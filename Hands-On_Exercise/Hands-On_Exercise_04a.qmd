---
title: "Hands-On Exercise 4a (Visualising Distribution)"
author: "Zanelle Lee Wenfang"
date-modified: "last-modified"
execute:
    echo: true
    eval: true
    warning: false
    freeze: true
---

```{r}
pacman::p_load(ggdist, ggridges, ggthemes,
               colorspace, tidyverse)
exam <- read_csv("Data files/Exam_data.csv")

#ridgeline plot using geom_density_ridges()
#can also use geom_ridgeline()
ggplot(exam, 
       aes(x = ENGLISH, 
           y = CLASS)) +
  geom_density_ridges(
    scale = 3,
    rel_min_height = 0.01,
    bandwidth = 3.4,
    fill = lighten("#7097BB", .3), #7097BB blue is fill colour
    color = "white" #outline colour
  ) +
  scale_x_continuous(
    name = "English grades", #labelling the x axis
    expand = c(0, 0)
    ) +
  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +
  #did not name the y-axis
  #expanision of 0.2 and 2.6 to adjust the height and placement of ridges
  theme_ridges()

#varying fill colours along x-axis using geom_density_ridges_gradient()
#can also use geom_ridgeline_gradient()
#can only either vary fill colours or transparency, not both
ggplot(exam, 
       aes(x = ENGLISH, 
           y = CLASS,
           fill = stat(x))) +
  geom_density_ridges_gradient(
    scale = 3,
    rel_min_height = 0.01) +
  scale_fill_viridis_c(name = "Temp. [F]",
                       option = "C") +
  scale_x_continuous(
    name = "English grades",
    expand = c(0, 0)
  ) +
  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +
  theme_ridges()

#using stat(ecdf) 
#stat_density_ridges() of ggridges replaces stat_density of ggplot2
#It is important include the argument calc_ecdf = TRUE in stat_density_ridges().
ggplot(exam,
       aes(x = ENGLISH, 
           y = CLASS, 
           fill = 0.5 - abs(0.5-stat(ecdf)))) +
  stat_density_ridges(geom = "density_ridges_gradient", 
                      calc_ecdf = TRUE) +
  scale_fill_viridis_c(name = "Tail probability",
                       direction = -1) +
  theme_ridges()

#using geom_density_ridges_gradient(), can colour ridgeline plot by quantile
#via stat(quantile) aesthetic
ggplot(exam,
       aes(x = ENGLISH, 
           y = CLASS, 
           fill = factor(stat(quantile))
           )) +
  stat_density_ridges(
    geom = "density_ridges_gradient",
    calc_ecdf = TRUE, 
    quantiles = 4,
    quantile_lines = TRUE) +
  scale_fill_viridis_d(name = "Quartiles") +
  theme_ridges()

#cut points 2.5% and 97.5% cut points to colour ridgeline
ggplot(exam,
       aes(x = ENGLISH, 
           y = CLASS, 
           fill = factor(stat(quantile))
           )) +
  stat_density_ridges(
    geom = "density_ridges_gradient",
    calc_ecdf = TRUE, 
    quantiles = c(0.025, 0.975)
    ) +
  scale_fill_manual(
    name = "Probability",
    values = c("#FF0000A0", "#A0A0A0A0", "#0000FFA0"),
    labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]")
  ) +
  theme_ridges()

#raincloud plot created using ggdist and ggplot2
#plotting half-eye graph using stat_halfeye() of ggdist
#remove slab interval by setting .width=0 and point_colour=NA
ggplot(exam, 
       aes(x = RACE, 
           y = ENGLISH)) +
  stat_halfeye(adjust = 0.5,
               justification = -0.2,
               .width = 0,
               point_colour = NA)

#adding 2nd geometry layer using geom_boxplot() of ggplot2
#produces narrow boxplot, we reduce width and adjust opacity
ggplot(exam, 
       aes(x = RACE, 
           y = ENGLISH)) +
  stat_halfeye(adjust = 0.5,
               justification = -0.2,
               .width = 0,
               point_colour = NA) +
  geom_boxplot(width = .20,
               outlier.shape = NA)

#adding 3rd geometry layer using stat_dots() of ggdist
#produces a half-dotplot (similar to histogram)
#we select side ="left" indicating we want it on the left side
ggplot(exam, 
       aes(x = RACE, 
           y = ENGLISH)) +
  stat_halfeye(adjust = 0.5,
               justification = -0.2,
               .width = 0,
               point_colour = NA) +
  geom_boxplot(width = .20,
               outlier.shape = NA) +
  stat_dots(side = "left", 
            justification = 1.2, 
            binwidth = .5,
            dotsize = 2)

#lastly add coord_flip() of ggplot2 to flip raincloud chart horizontally
#also adding theme_economist of ggthemes
ggplot(exam, 
       aes(x = RACE, 
           y = ENGLISH)) +
  stat_halfeye(adjust = 0.5,
               justification = -0.2,
               .width = 0,
               point_colour = NA) +
  geom_boxplot(width = .20,
               outlier.shape = NA) +
  stat_dots(side = "left", 
            justification = 1.2, 
            binwidth = .5,
            dotsize = 1.5) +
  coord_flip() +
  theme_economist()
```
