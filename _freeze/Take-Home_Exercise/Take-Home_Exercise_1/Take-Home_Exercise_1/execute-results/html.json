{
  "hash": "477321f23491da67434f50e224db2120",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take Home Exercise 1\"\nauthor: \"Zanelle Lee Wenfang\"\ndate: \"February 1, 2025\"\ndate-modified: \"last-modified\"\nexecute:\n    echo: true\n    eval: true\n    warning: false\n    freeze: true\n---\n\n\n\n### 1. Overview\n\n#### 1.1. Background\n\nIn this exercise, Japan's heart attack occurrences are studied alongside with several possible contributing factors. Increasing numbers of heart attacks over the years make it crucial to study the situation surrounding these occurrences, and find out if there are any correlations. Insights from this analysis will then hopefully aid as a preventive measure.\n\n#### 1.2. Objectives\n\nUsing the dataset [Heart Attack in Japan Youth vs Adult](https://www.kaggle.com/datasets/ashaychoudhary/heart-attack-in-japan-youth-vs-adult), we attempt to understand the heart attack situation in Japan and gain insights surrounding the different age groups.\n\n### 2. R packages\n\nAppropriate R packages will be installed and loaded for effective data processing and transformation. The R packages used and its respective function will be displayed in the table below.\n\n| R Package | Function |\n|--------------------------|----------------------------------------------|\n| [tidyverse](http://tidyverse.org/packages/) | A collection of packages to do various types data analyses. |\n| [SmartEDA](https://cran.r-project.org/web/packages/SmartEDA/vignettes/SmartEDA.html) | For initial exploratory analysis describing the structure and relationships present in the data without lengthy R codes. |\n| [ggdist](https://mjskay.github.io/ggdist/reference/ggdist-package.html) | For visualizations of distributions and uncertainty. |\n| ggpubr |  |\n|  |  |\n|  |  |\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, SmartEDA, ggdist, ggpubr)\n```\n:::\n\n\n\n### 3. Data\n\n#### 3.1. Loading the data\n\nThe dataset is first loaded using *read_csv*.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\njapan_data <- read_csv(\"japan_heart_attack_dataset.csv\")\n```\n:::\n\n\n\n#### 3.2. Data overview and selection\n\nFirst, we look at the dataset to see if there are any missing or duplicated values. Using *ExpData*, there are 30,000 rows of data with no missing values nor duplicated rows. It should also be noted that there are 15 extra columns of numerical values that are meaningless as they seem to be the results of certain calculations which are not stated.\n\n::: panel-tabset\n## Summary Table 1\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n   Index           Variable_Name Variable_Type Sample_n Missing_Count\n1      1                     Age       numeric    30000             0\n2      2                  Gender     character    30000             0\n3      3                  Region     character    30000             0\n4      4         Smoking_History     character    30000             0\n5      5        Diabetes_History     character    30000             0\n6      6    Hypertension_History     character    30000             0\n7      7       Cholesterol_Level       numeric    30000             0\n8      8       Physical_Activity     character    30000             0\n9      9            Diet_Quality     character    30000             0\n10    10     Alcohol_Consumption     character    30000             0\n11    11           Stress_Levels       numeric    30000             0\n12    12                     BMI       numeric    30000             0\n13    13              Heart_Rate       numeric    30000             0\n14    14             Systolic_BP       numeric    30000             0\n15    15            Diastolic_BP       numeric    30000             0\n16    16          Family_History     character    30000             0\n17    17 Heart_Attack_Occurrence     character    30000             0\n18    18          Extra_Column_1       numeric    30000             0\n19    19          Extra_Column_2       numeric    30000             0\n20    20          Extra_Column_3       numeric    30000             0\n21    21          Extra_Column_4       numeric    30000             0\n22    22          Extra_Column_5       numeric    30000             0\n23    23          Extra_Column_6       numeric    30000             0\n24    24          Extra_Column_7       numeric    30000             0\n25    25          Extra_Column_8       numeric    30000             0\n26    26          Extra_Column_9       numeric    30000             0\n27    27         Extra_Column_10       numeric    30000             0\n28    28         Extra_Column_11       numeric    30000             0\n29    29         Extra_Column_12       numeric    30000             0\n30    30         Extra_Column_13       numeric    30000             0\n31    31         Extra_Column_14       numeric    30000             0\n32    32         Extra_Column_15       numeric    30000             0\n   Per_of_Missing No_of_distinct_values\n1               0                    62\n2               0                     2\n3               0                     2\n4               0                     2\n5               0                     2\n6               0                     2\n7               0                 30000\n8               0                     3\n9               0                     3\n10              0                     4\n11              0                 29613\n12              0                 30000\n13              0                 30000\n14              0                 30000\n15              0                 30000\n16              0                     2\n17              0                     2\n18              0                 30000\n19              0                 30000\n20              0                 30000\n21              0                 30000\n22              0                 30000\n23              0                 30000\n24              0                 30000\n25              0                 30000\n26              0                 30000\n27              0                 30000\n28              0                 30000\n29              0                 30000\n30              0                 30000\n31              0                 30000\n32              0                 30000\n```\n\n\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstats1 <- ExpData(data=japan_data, type=2)\nstats1\n```\n:::\n\n\n:::\n\n::: panel-tabset\n## Summary Table 2\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n   Index           Variable_Name Variable_Type Sample_n Missing_Count\n1      1                     Age       numeric    30000             0\n2      2                  Gender     character    30000             0\n3      3                  Region     character    30000             0\n4      4         Smoking_History     character    30000             0\n5      5        Diabetes_History     character    30000             0\n6      6    Hypertension_History     character    30000             0\n7      7       Cholesterol_Level       numeric    30000             0\n8      8       Physical_Activity     character    30000             0\n9      9            Diet_Quality     character    30000             0\n10    10     Alcohol_Consumption     character    30000             0\n11    11           Stress_Levels       numeric    30000             0\n12    12                     BMI       numeric    30000             0\n13    13              Heart_Rate       numeric    30000             0\n14    14             Systolic_BP       numeric    30000             0\n15    15            Diastolic_BP       numeric    30000             0\n16    16          Family_History     character    30000             0\n17    17 Heart_Attack_Occurrence     character    30000             0\n18    18          Extra_Column_1       numeric    30000             0\n19    19          Extra_Column_2       numeric    30000             0\n20    20          Extra_Column_3       numeric    30000             0\n21    21          Extra_Column_4       numeric    30000             0\n22    22          Extra_Column_5       numeric    30000             0\n23    23          Extra_Column_6       numeric    30000             0\n24    24          Extra_Column_7       numeric    30000             0\n25    25          Extra_Column_8       numeric    30000             0\n26    26          Extra_Column_9       numeric    30000             0\n27    27         Extra_Column_10       numeric    30000             0\n28    28         Extra_Column_11       numeric    30000             0\n29    29         Extra_Column_12       numeric    30000             0\n30    30         Extra_Column_13       numeric    30000             0\n31    31         Extra_Column_14       numeric    30000             0\n32    32         Extra_Column_15       numeric    30000             0\n   Per_of_Missing No_of_distinct_values\n1               0                    62\n2               0                     2\n3               0                     2\n4               0                     2\n5               0                     2\n6               0                     2\n7               0                 30000\n8               0                     3\n9               0                     3\n10              0                     4\n11              0                 29613\n12              0                 30000\n13              0                 30000\n14              0                 30000\n15              0                 30000\n16              0                     2\n17              0                     2\n18              0                 30000\n19              0                 30000\n20              0                 30000\n21              0                 30000\n22              0                 30000\n23              0                 30000\n24              0                 30000\n25              0                 30000\n26              0                 30000\n27              0                 30000\n28              0                 30000\n29              0                 30000\n30              0                 30000\n31              0                 30000\n32              0                 30000\n```\n\n\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstats2 <- ExpData(data=japan_data, type=2)\nstats2\n```\n:::\n\n\n:::\n\n#### 3.3. Data preparation\n\n##### 3.3.1. Selecting desired columns\n\nAs there is no information on these columns of data, these will be filtered away from the dataset and leaving 17 columns in the new filtered dataset, *filtered_data*.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiltered_data <- select(japan_data, Age, Gender, Region, Smoking_History\n, Diabetes_History, Hypertension_History, Cholesterol_Level, Physical_Activity, Diet_Quality,\tAlcohol_Consumption,\tStress_Levels,\tBMI,\tHeart_Rate,\tSystolic_BP,\tDiastolic_BP,\tFamily_History,\tHeart_Attack_Occurrence)\n```\n:::\n\n\n\n##### 3.3.2. Adjusting variables\n\n###### 3.3.2.1. Converting variables to suitable forms\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiltered_data <- filtered_data %>% \n  mutate(Physical_Activity=(recode(Physical_Activity, \"Low\"=\"1\", \"Moderate\"=\"2\", \"High\"=\"3\")))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfiltered_data <- filtered_data %>% \n  mutate(Diet_Quality=(recode(Diet_Quality, \"Poor\"=\"1\", \"Average\"=\"2\", \"Good\"=\"3\")))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfiltered_data <- filtered_data %>% \n  mutate(Alcohol_Consumption=(recode(Alcohol_Consumption, \"None\"=\"0\", \"Low\"=\"1\", \"Moderate\"=\"2\", \"High\"=\"3\")))\n```\n:::\n\n\n\n###### 3.3.2.2. Changing variable data types\n\nLooking at the character rows, it is seen that they have fixed input and should be converted to factors using *mutate()* to reduce errors and improve efficiency. To check that this is done correctly, *glimpse()* is used.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncols <- c(\"Gender\", \"Region\", \"Physical_Activity\", \"Diet_Quality\", \"Alcohol_Consumption\", \"Smoking_History\"\n, \"Diabetes_History\", \"Hypertension_History\", \"Family_History\",\t\"Heart_Attack_Occurrence\")\nfiltered_data <- filtered_data %>%\n  mutate(across(cols, as.factor))\n\nglimpse(filtered_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 30,000\nColumns: 17\n$ Age                     <dbl> 56, 69, 46, 32, 60, 25, 78, 38, 56, 75, 36, 40…\n$ Gender                  <fct> Male, Male, Male, Female, Female, Female, Male…\n$ Region                  <fct> Urban, Urban, Rural, Urban, Rural, Rural, Urba…\n$ Smoking_History         <fct> Yes, No, Yes, No, No, No, No, Yes, No, No, No,…\n$ Diabetes_History        <fct> No, No, No, No, No, No, Yes, No, No, No, No, N…\n$ Hypertension_History    <fct> No, No, No, No, No, No, Yes, No, Yes, No, Yes,…\n$ Cholesterol_Level       <dbl> 186.4002, 185.1367, 210.6966, 211.1655, 223.81…\n$ Physical_Activity       <fct> 2, 1, 1, 2, 3, 1, 3, 3, 2, 2, 2, 2, 1, 1, 3, 1…\n$ Diet_Quality            <fct> 1, 3, 2, 3, 3, 3, 1, 1, 2, 3, 2, 1, 2, 3, 1, 3…\n$ Alcohol_Consumption     <fct> 1, 1, 2, 3, 3, 3, 3, 0, 2, 2, 1, 2, 1, 2, 3, 1…\n$ Stress_Levels           <dbl> 3.644786, 3.384056, 3.810911, 6.014878, 6.8068…\n$ BMI                     <dbl> 33.96135, 28.24287, 27.60121, 23.71729, 19.771…\n$ Heart_Rate              <dbl> 72.30153, 57.45764, 64.65870, 55.13147, 76.667…\n$ Systolic_BP             <dbl> 123.90209, 129.89331, 145.65490, 131.78522, 10…\n$ Diastolic_BP            <dbl> 85.68281, 73.52426, 71.99481, 68.21133, 92.902…\n$ Family_History          <fct> No, Yes, No, No, No, No, No, No, No, Yes, Yes,…\n$ Heart_Attack_Occurrence <fct> No, No, No, No, No, No, No, No, Yes, No, No, N…\n```\n\n\n:::\n:::\n\n\n\n##### 3.3.3. Converting variables to suitable forms\n\n###### 3.3.3.1. Binning *Age* into Age Groups\n\nTo be able to gain better insights from the dataset, it was decided that *Age* should be binned into 4 separate bins - Youth, Adult, Middle-aged adult and Senior Citizen. The differences between the various age groups might be more visible than if it was kept as a continuous variable.\n\n::: {.callout-tip title=\"Age Classification\"}\nFor this analysis, the age classification would be as such:\n\n|                   |                   |\n|-------------------|-------------------|\n| Youth             | \\<= 25 years old  |\n| Adult             | 26 - 44 years old |\n| Middle-aged adult | 45 - 49 years old |\n| Senior Citizen    | \\>= 60 years old  |\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbinned_data <- filtered_data %>% mutate(Age_Group = cut(Age, breaks=c(0, 24, 44, 59, 80)))\n\nbinned_data <- binned_data %>% \n  relocate(Age_Group, .after = Age)\n\nbinned_data <- binned_data %>% \n  mutate(Age_Group=(recode(Age_Group, \"(0,24]\"=\"Youth\", \"(24,44]\"=\"Adult\", \"(44,59]\"=\"Middle-aged adult\", \"(59,80]\"=\"Senior Citizen\")))\nglimpse(binned_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 30,000\nColumns: 18\n$ Age                     <dbl> 56, 69, 46, 32, 60, 25, 78, 38, 56, 75, 36, 40…\n$ Age_Group               <fct> Middle-aged adult, Senior Citizen, Middle-aged…\n$ Gender                  <fct> Male, Male, Male, Female, Female, Female, Male…\n$ Region                  <fct> Urban, Urban, Rural, Urban, Rural, Rural, Urba…\n$ Smoking_History         <fct> Yes, No, Yes, No, No, No, No, Yes, No, No, No,…\n$ Diabetes_History        <fct> No, No, No, No, No, No, Yes, No, No, No, No, N…\n$ Hypertension_History    <fct> No, No, No, No, No, No, Yes, No, Yes, No, Yes,…\n$ Cholesterol_Level       <dbl> 186.4002, 185.1367, 210.6966, 211.1655, 223.81…\n$ Physical_Activity       <fct> 2, 1, 1, 2, 3, 1, 3, 3, 2, 2, 2, 2, 1, 1, 3, 1…\n$ Diet_Quality            <fct> 1, 3, 2, 3, 3, 3, 1, 1, 2, 3, 2, 1, 2, 3, 1, 3…\n$ Alcohol_Consumption     <fct> 1, 1, 2, 3, 3, 3, 3, 0, 2, 2, 1, 2, 1, 2, 3, 1…\n$ Stress_Levels           <dbl> 3.644786, 3.384056, 3.810911, 6.014878, 6.8068…\n$ BMI                     <dbl> 33.96135, 28.24287, 27.60121, 23.71729, 19.771…\n$ Heart_Rate              <dbl> 72.30153, 57.45764, 64.65870, 55.13147, 76.667…\n$ Systolic_BP             <dbl> 123.90209, 129.89331, 145.65490, 131.78522, 10…\n$ Diastolic_BP            <dbl> 85.68281, 73.52426, 71.99481, 68.21133, 92.902…\n$ Family_History          <fct> No, Yes, No, No, No, No, No, No, No, Yes, Yes,…\n$ Heart_Attack_Occurrence <fct> No, No, No, No, No, No, No, No, Yes, No, No, N…\n```\n\n\n:::\n:::\n\n\n\n::: callout-caution\nIt should be noted that several columns have measurements that consist of seemingly impossible values.\n\nThe *BMI* column consists of single digit values. However, the [World Health Organisation](https://apps.who.int/nutrition/landscape/help.aspx?menu=0&helpid=420#:~:text=BMI%20%3C17.0%3A%20moderate%20and%20severe,BMI%20%E2%89%A525.0%3A%20overweight) states that BMI values of \\<17.0 indicates moderate and severe thinness in adult populations and BMI \\<16.0 is known to be associated with a markedly increased risk for ill-health, poor physical performance, lethargy and even death; thus making this cut-off point to be a valid extreme limit.\n\nThe [minimum systolic blood pressure and diastolic blood pressure](https://www.ncbi.nlm.nih.gov/books/NBK268/#:~:text=The%20minimum%20acceptable%20blood%20pressure,be%20great%20variation%20between%20patients.) is also stated to be 90 mm Hg systolic and 60 mm Hg diastolic while the lowest values in the dataset go as low as 56.2 mm Hg and 40.0 mm Hg (3s.f.) respectively.\n\nHowever, as the dataset did not clarify the units used as well as calculation methods to obtain these values. Thus, these values are not removed from the dataset but this discrepency should be taken into account.\n:::\n\n### 4. Data exploration and analysis\n\n#### 4.1. Exploratory Data Analysis\n\n##### 4.1.1. Grouping similar variables\n\nFor more efficient analysis of the dataset, it is decided that the variables should be split to **Uncontrollable**, **Lifestyle** and **Measurements**. The way that it is split is as per follows:\n\n| Uncontrollable | Lifestyle           | Measurements         |\n|----------------|---------------------|----------------------|\n| Gender         | Smoking_History     | Diabetes_History     |\n| Region         | Physical_Activity   | Hypertension_History |\n| Family_History | Diet_Quality        | Cholesterol_Level    |\n|                | Alcohol_Consumption | BMI                  |\n|                | Stress_Levels       | Heart_Rate           |\n|                |                     | Systolic_BP          |\n|                |                     | Diastolic_BP         |\n\n*Age* and *Heart_Attack_Occurrences* are not included in the table above as they are considered the target variables in this data. However, if they were to be placed, they would fall under **Uncontrollable**.\n\n##### 4.1.2. Age vs Heart Attack Occurrence\n\n::: {.callout-note collapse=\"true\" title=\"See codes\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=binned_data, aes(x=Age_Group, fill=Heart_Attack_Occurrence)) +\n  geom_bar(width=.8, alpha = 0.7, position=\"dodge\") +\n  ggtitle(\" \") + xlab(\"Age Group\") + labs(fill=\"Heart Attack Occurrence\")\n```\n:::\n\n\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-Home_Exercise_1_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n\nThe percentages of heart attack occurrences in each age group can also be seen below.\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n           Youth            Adult Middle-age adult   Senior Citizen \n        9.126506        10.151254         9.894589         9.851760 \n```\n\n\n:::\n:::\n\n\n\n##### 4.1.3. Uncontrollable VS Heart Attack Occurrence\n\n::: {.callout-note collapse=\"true\" title=\"See codes\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- ggplot(data=binned_data, aes(y=Heart_Attack_Occurrence, x=Age, fill=Gender)) +\n  geom_violin(alpha=0.3, position=\"identity\") +\n  ylab(\"Heart Attack Occurrence\") + xlab(\"Age\")\n\np2 <- ggplot(data=binned_data, aes(y=Heart_Attack_Occurrence, x=Age, fill=Region)) +\n  geom_violin(alpha=0.3, position=\"identity\") +\n  ylab(\"Heart Attack Occurrence\") + xlab(\"Age\")\n\np3 <- ggplot(data=binned_data, aes(y=Heart_Attack_Occurrence, x=Age, fill=Family_History)) +\n  geom_violin(alpha=0.3, position=\"identity\") +\n  ylab(\"Heart Attack Occurrence\") + xlab(\"Age\") + labs(fill=\"Family History\")\n\nfigure <- ggarrange(p1 + rremove(\"ylab\") + rremove(\"xlab\"), p2 + rremove(\"xlab\"), p3 + rremove(\"ylab\"),\n                    ncol = 1, nrow = 3)\nfigure\n```\n:::\n\n\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-Home_Exercise_1_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n\n##### 4.1.4. Lifestyle VS Heart Attack Occurrence\n\n::: panel-tabset\n## Smoking\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=binned_data, aes(x=Age_Group, fill=Smoking_History)) +\n  geom_bar(alpha = 0.7, width= 0.8, stat=\"count\", position=\"fill\") +\n  scale_y_continuous(labels = scales::percent) + xlab(\"Age Group\") + \n  ylab(\"Percentage of Smokers\") + labs(fill=\"Smoker\")\n```\n\n::: {.cell-output-display}\n![](Take-Home_Exercise_1_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n\n## Physical_Activity\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=binned_data, aes(x=Age_Group, fill=Physical_Activity)) +\n  geom_bar(alpha = 0.7, width= 0.8, stat=\"count\", position=\"fill\") +\n  scale_y_continuous(labels = scales::percent) + xlab(\"Age Group\") + \n  ylab(\"Percentage of Physical Activity level\") + labs(fill=\"Level of Physical Activity\")\n```\n\n::: {.cell-output-display}\n![](Take-Home_Exercise_1_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n\n## Diet_Quality\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=binned_data, aes(x=Age_Group, fill=Diet_Quality)) +\n  geom_bar(alpha = 0.7, width= 0.8, stat=\"count\", position=\"fill\") +\n  scale_y_continuous(labels = scales::percent) + xlab(\"Age Group\") + \n  ylab(\"Percentage of Diet Quality\") + labs(fill=\"Diet Quality\")\n```\n\n::: {.cell-output-display}\n![](Take-Home_Exercise_1_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n\n## Alcohol_Consumption\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=binned_data, aes(x=Age_Group, fill=Alcohol_Consumption)) +\n  geom_bar(alpha = 0.7, width= 0.8, stat=\"count\", position=\"fill\") +\n  scale_y_continuous(labels = scales::percent) + xlab(\"Age Group\") + \n  ylab(\"Percentage of Alcohol_Consumption\") + labs(fill=\"Alcohol_Consumption\")\n```\n\n::: {.cell-output-display}\n![](Take-Home_Exercise_1_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n:::\n\n##### 4.1.5. Measurements VS Heart Attack Occurrence\n",
    "supporting": [
      "Take-Home_Exercise_1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}